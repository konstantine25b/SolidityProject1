{
  "address": "0x814D3F8250ce4A3568953EEB875A993dd6C01C8c",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x746449aaed92728c1846717b05a2cfd87a3c05eb3b6c7d90d55aae3489b7a772",
  "receipt": {
    "to": null,
    "from": "0x83890e4062b56c5ae6932227Fc2f8f1B70bE8673",
    "contractAddress": "0x814D3F8250ce4A3568953EEB875A993dd6C01C8c",
    "transactionIndex": 60,
    "gasUsed": "812903",
    "logsBloom": "0x
    "blockHash": "0xd79dc0cbef7ff65fcf03414c8d9231cf6a85c1e21c3652d9fbca9d78a06269bf",
    "transactionHash": "0x746449aaed92728c1846717b05a2cfd87a3c05eb3b6c7d90d55aae3489b7a772",
    "logs": [],
    "blockNumber": 4049682,
    "cumulativeGasUsed": "21638274",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "190d6416df8651a6b85cdac0b2c62af9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// get funds from users\\n//withdraw funds\\n//set a min value in usd\\n\\n//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n//    uint256 public minUSD = 50 *1e18;\\n   uint256 public constant minUSD = 50 * 10 ** 18;\\n\\n   address[] public funders;\\n   mapping(address=>uint256) public addressToAmountFunder;\\n\\n   address public immutable owner;\\n\\n   AggregatorV3Interface public priceFeed;\\n    \\n   constructor(address priceFeedAddress){\\n\\n      owner = msg.sender;\\n      priceFeed= AggregatorV3Interface(priceFeedAddress);\\n   }\\n\\n\\n    function fund() public payable {\\n        // wnat to be able to set min amount in usd\\n    //    getConversionRate(msg.value);\\n        require(msg.value.getConversionRate(priceFeed) >=minUSD, \\\"not enought money\\\");\\n        funders.push(msg.sender);\\n        addressToAmountFunder[msg.sender] = msg.value;\\n\\n    }\\n\\n    function withdraw() public onlyOwner{\\n\\n        for(uint256 funderIndex = 0 ; funderIndex< funders.length ; funderIndex++){\\n           address funder = funders[funderIndex] ;\\n           addressToAmountFunder[funder] = 0 ;\\n          \\n        }\\n         funders = new address[](0);\\n\\n        (bool callSuccess ,) = payable(msg.sender).call{value:address(this).balance}(\\\"\\\");\\n        require(callSuccess,\\\"call failed\\\");   \\n\\n    }\\n    \\n    modifier onlyOwner{\\n        // require(msg.sender == owner ,\\\"sender is not a owner\\\");\\n\\n        if (msg.sender != owner){\\n            revert FundMe__NotOwner();\\n        }\\n        _; \\n    }\\n\\n    receive() external payable{\\n        fund();\\n    }\\n    fallback() external payable{\\n        fund();\\n    }\\n\\n}\\n\",\"keccak256\":\"0x5446594c13f0ca36cd1965ee26b08d0d0375abae442eb902168cbf54b9f3fda9\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter{\\n\\n    function getPrice(AggregatorV3Interface priceFeed)internal view returns(uint256){\\n        //ABI \\n       //address 0x694AA1769357215DE4FAC081bf1f309aDC325306\\n      \\n       (,int256 price,,,)= priceFeed.latestRoundData();\\n    //    return uint256(price* 1e10);\\n     return uint256(price * 10000000000);\\n\\n    }\\n\\n\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns(uint256){\\n        uint256 ethPrice = getPrice(priceFeed);\\n        // uint256 ethAmountInUsd=  (ethPrice/ethAmount) / 1e18;\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        return ethAmountInUsd;\\n\\n    }\\n\\n}\",\"keccak256\":\"0x50715784ef7e59dcff5c38424d7a281fb3973375b8ccca356bd05ee980e12ada\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610eb0380380610eb083398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610d5161015f600039600081816102d4015261053a0152610d516000f3fe6080604052600436106100745760003560e01c8063b60d42881161004e578063b60d4288146100fa578063c20089f414610104578063dc0d3dff14610141578063dc992aa01461017e57610083565b80633ccfd60b1461008d578063741bef1a146100a45780638da5cb5b146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d2565b005b3480156100b057600080fd5b506100b9610512565b6040516100c691906107b3565b60405180910390f35b3480156100db57600080fd5b506100e4610538565b6040516100f191906107ef565b60405180910390f35b6101026101a9565b005b34801561011057600080fd5b5061012b6004803603810190610126919061083b565b61055c565b6040516101389190610881565b60405180910390f35b34801561014d57600080fd5b50610168600480360381019061016391906108c8565b610574565b60405161017591906107ef565b60405180910390f35b34801561018a57600080fd5b506101936105b3565b6040516101a09190610881565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c090919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610952565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610357576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040257600080828154811061037c5761037b610972565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103fa906109d0565b91505061035a565b50600067ffffffffffffffff81111561041e5761041d610a18565b5b60405190808252806020026020018201604052801561044c5781602001602082028036833780820191505090505b506000908051906020019061046292919061068d565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048990610a78565b60006040518083038185875af1925050503d80600081146104c6576040519150601f19603f3d011682016040523d82523d6000602084013e6104cb565b606091505b505090508061050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050690610ad9565b60405180910390fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60016020528060005260406000206000915090505481565b6000818154811061058457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b6000806105cc836105fc565b90506000670de0b6b3a764000085836105e59190610af9565b6105ef9190610b6a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561064a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066e9190610c28565b5050509150506402540be400816106859190610ca3565b915050919050565b828054828255906000526020600020908101928215610706579160200282015b828111156107055782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ad565b5b5090506107139190610717565b5090565b5b80821115610730576000816000905550600101610718565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061077961077461076f84610734565b610754565b610734565b9050919050565b600061078b8261075e565b9050919050565b600061079d82610780565b9050919050565b6107ad81610792565b82525050565b60006020820190506107c860008301846107a4565b92915050565b60006107d982610734565b9050919050565b6107e9816107ce565b82525050565b600060208201905061080460008301846107e0565b92915050565b600080fd5b610818816107ce565b811461082357600080fd5b50565b6000813590506108358161080f565b92915050565b6000602082840312156108515761085061080a565b5b600061085f84828501610826565b91505092915050565b6000819050919050565b61087b81610868565b82525050565b60006020820190506108966000830184610872565b92915050565b6108a581610868565b81146108b057600080fd5b50565b6000813590506108c28161089c565b92915050565b6000602082840312156108de576108dd61080a565b5b60006108ec848285016108b3565b91505092915050565b600082825260208201905092915050565b7f6e6f7420656e6f75676874206d6f6e6579000000000000000000000000000000600082015250565b600061093c6011836108f5565b915061094782610906565b602082019050919050565b6000602082019050818103600083015261096b8161092f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109db82610868565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a0d57610a0c6109a1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a62600083610a47565b9150610a6d82610a52565b600082019050919050565b6000610a8382610a55565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ac3600b836108f5565b9150610ace82610a8d565b602082019050919050565b60006020820190508181036000830152610af281610ab6565b9050919050565b6000610b0482610868565b9150610b0f83610868565b9250828202610b1d81610868565b91508282048414831517610b3457610b336109a1565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b7582610868565b9150610b8083610868565b925082610b9057610b8f610b3b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bba81610b9b565b8114610bc557600080fd5b50565b600081519050610bd781610bb1565b92915050565b6000819050919050565b610bf081610bdd565b8114610bfb57600080fd5b50565b600081519050610c0d81610be7565b92915050565b600081519050610c228161089c565b92915050565b600080600080600060a08688031215610c4457610c4361080a565b5b6000610c5288828901610bc8565b9550506020610c6388828901610bfe565b9450506040610c7488828901610c13565b9350506060610c8588828901610c13565b9250506080610c9688828901610bc8565b9150509295509295909350565b6000610cae82610bdd565b9150610cb983610bdd565b9250828202610cc781610bdd565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cff57610cfe6109a1565b5b8282058414831517610d1457610d136109a1565b5b509291505056fea264697066735822122074611779eea54b6c2b841dadac3160d2c4c27577728b8898913cd6f2e81ada1764736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063b60d42881161004e578063b60d4288146100fa578063c20089f414610104578063dc0d3dff14610141578063dc992aa01461017e57610083565b80633ccfd60b1461008d578063741bef1a146100a45780638da5cb5b146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d2565b005b3480156100b057600080fd5b506100b9610512565b6040516100c691906107b3565b60405180910390f35b3480156100db57600080fd5b506100e4610538565b6040516100f191906107ef565b60405180910390f35b6101026101a9565b005b34801561011057600080fd5b5061012b6004803603810190610126919061083b565b61055c565b6040516101389190610881565b60405180910390f35b34801561014d57600080fd5b50610168600480360381019061016391906108c8565b610574565b60405161017591906107ef565b60405180910390f35b34801561018a57600080fd5b506101936105b3565b6040516101a09190610881565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c090919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610952565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610357576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040257600080828154811061037c5761037b610972565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103fa906109d0565b91505061035a565b50600067ffffffffffffffff81111561041e5761041d610a18565b5b60405190808252806020026020018201604052801561044c5781602001602082028036833780820191505090505b506000908051906020019061046292919061068d565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048990610a78565b60006040518083038185875af1925050503d80600081146104c6576040519150601f19603f3d011682016040523d82523d6000602084013e6104cb565b606091505b505090508061050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050690610ad9565b60405180910390fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60016020528060005260406000206000915090505481565b6000818154811061058457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b6000806105cc836105fc565b90506000670de0b6b3a764000085836105e59190610af9565b6105ef9190610b6a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561064a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066e9190610c28565b5050509150506402540be400816106859190610ca3565b915050919050565b828054828255906000526020600020908101928215610706579160200282015b828111156107055782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ad565b5b5090506107139190610717565b5090565b5b80821115610730576000816000905550600101610718565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061077961077461076f84610734565b610754565b610734565b9050919050565b600061078b8261075e565b9050919050565b600061079d82610780565b9050919050565b6107ad81610792565b82525050565b60006020820190506107c860008301846107a4565b92915050565b60006107d982610734565b9050919050565b6107e9816107ce565b82525050565b600060208201905061080460008301846107e0565b92915050565b600080fd5b610818816107ce565b811461082357600080fd5b50565b6000813590506108358161080f565b92915050565b6000602082840312156108515761085061080a565b5b600061085f84828501610826565b91505092915050565b6000819050919050565b61087b81610868565b82525050565b60006020820190506108966000830184610872565b92915050565b6108a581610868565b81146108b057600080fd5b50565b6000813590506108c28161089c565b92915050565b6000602082840312156108de576108dd61080a565b5b60006108ec848285016108b3565b91505092915050565b600082825260208201905092915050565b7f6e6f7420656e6f75676874206d6f6e6579000000000000000000000000000000600082015250565b600061093c6011836108f5565b915061094782610906565b602082019050919050565b6000602082019050818103600083015261096b8161092f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109db82610868565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a0d57610a0c6109a1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a62600083610a47565b9150610a6d82610a52565b600082019050919050565b6000610a8382610a55565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ac3600b836108f5565b9150610ace82610a8d565b602082019050919050565b60006020820190508181036000830152610af281610ab6565b9050919050565b6000610b0482610868565b9150610b0f83610868565b9250828202610b1d81610868565b91508282048414831517610b3457610b336109a1565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b7582610868565b9150610b8083610868565b925082610b9057610b8f610b3b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bba81610b9b565b8114610bc557600080fd5b50565b600081519050610bd781610bb1565b92915050565b6000819050919050565b610bf081610bdd565b8114610bfb57600080fd5b50565b600081519050610c0d81610be7565b92915050565b600081519050610c228161089c565b92915050565b600080600080600060a08688031215610c4457610c4361080a565b5b6000610c5288828901610bc8565b9550506020610c6388828901610bfe565b9450506040610c7488828901610c13565b9350506060610c8588828901610c13565b9250506080610c9688828901610bc8565b9150509295509295909350565b6000610cae82610bdd565b9150610cb983610bdd565b9250828202610cc781610bdd565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cff57610cfe6109a1565b5b8282058414831517610d1457610d136109a1565b5b509291505056fea264697066735822122074611779eea54b6c2b841dadac3160d2c4c27577728b8898913cd6f2e81ada1764736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunder",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}